{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","props","onAddTileLine","time","today","Date","date","day","color","isNaN","state","inputText","alert","newEvents","num","setTime","getTime","setDate","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","getMilliseconds","push","dateString","event","events","setState","concat","onInputTextChange","e","target","value","maxLengthCheck","length","maxLength","slice","addDate","icon","iconStyle","background","width","left","borderRadius","height","lineHeight","newEvent","addDateComment","style","type","this","onChange","onInput","onClick","className","fontFamily","layout","map","dangerouslySetInnerHTML","__html","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.941cdadd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport React, {Component} from \"react\";\nimport { VerticalTimeline, VerticalTimelineElement }  from 'react-vertical-timeline-component';\n/*import 'react-vertical-timeline-component/style.min.css';*/\nimport { LikeIcon } from './Icon';\nexport { RiHeart3Fill } from 'react-icons/ri';\n\n\n// eslint-disable-next-line no-undef\nclass App extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            newEvent : [{\n                date : \"01/01/2021\",\n                dateString : \"01/01/2021'<br/>'11:00:00:121\",\n                event : '시작'\n            }],\n            events : [{\n                date : \"22/09/2017\",\n                dateString: \"22/09/2017 11:00:11\",\n                event: \"Naissance du projet suite à la publication de l'<a href=\\\"https://www.legifrance.gouv.fr/affichTexteArticle.do;jsessionid=AE9DCF75DDCF0465784CEE0E7D62729F.tplgfr37s_2?idArticle=JORFARTI000035607420&cidTexte=JORFTEXT000035607388&dateTexte=29990101&categorieLien=id\\\">ordonnance du 22 Septembre 2017</a>\",\n                color : \"#fcd804\"\n            }\n            ],\n            inputText : 0\n        }\n\n    }\n\n\n\n    onAddTileLine = () => {\n        let time = null;\n        let today = new Date();\n        let date = '';\n        let day = '';\n        let color = '';\n\n        if(!isNaN(this.state.inputText)){\n            let newEvents = [];\n\n            let num = 0;\n            while(num<=this.state.inputText) {\n                if(num%2 === 0){\n                    color = \"#fcd804\";\n                    time = new Date(today.setTime(today.getTime()+1));\n                }\n                else\n                {\n                    color = \"#0aaf0c\";\n                    time = new Date(today.setDate(today.getDate()+1));\n                }\n                date = time.getDate() + \"/\" + (time.getMonth()+1) + \"/\" + time.getFullYear();\n                day = time.getDate() + \"/\" + (time.getMonth()+1) + \"/\" + time.getFullYear() + \" \" + time.getHours() + \":\" + time.getMinutes() + \":\" + time.getSeconds() + \":\" + time.getMilliseconds();\n\n\n\n                newEvents.push({\n                    date : date,\n                    dateString: day,\n                    event: num,\n                    color: color\n                })\n\n                num++;\n            }\n\n            const { events } = this.state;\n\n            this.setState({\n                events: events.concat(newEvents)\n            })\n        }else\n        {\n            alert(\"숫자를 입력해주시기 바랍니다.\");\n        }\n\n\n\n    }\n\n    onInputTextChange = (e) => {\n        this.setState({inputText : e.target.value})\n    }\n\n    maxLengthCheck= (e) => {\n        if (e.target.value.length > e.target.maxLength){\n            //object.maxLength : 매게변수 오브젝트의 maxlength 속성 값입니다.\n            e.target.value = e.target.value.slice(0, e.target.maxLength);\n        }\n    }\n\n    addDate = (day) => {\n        return(\n            <VerticalTimelineElement\n                icon={ <a>{(day)}</a> }\n                iconStyle={{ background: \"#a1a1a0\", color:\"#ffffff\", width:120, left:-42, borderRadius:2, height:25, lineHeight:2 }}\n            >\n            </VerticalTimelineElement>\n        )\n    }\n\nrender(){\n    let addDateComment = \"12/8/2021\";\n\n\n    return (\n        <div>\n            <div style={{height:100}}>\n                <span>\n                    Enter the number to add of timeline :&nbsp;\n                </span>\n\n                <input type={\"number\"} value = {this.state.inputText} onChange={this.onInputTextChange} maxLength={5} onInput={this.maxLengthCheck}/>\n                &nbsp;\n                <button onClick={this.onAddTileLine}> add timeline </button>\n            </div>\n\n            <div\n                className=\"App\"\n                style={{ fontFamily: \"Trebuchet Ms\" }}\n            >\n                <h1>Timeline Test</h1>\n                <VerticalTimeline layout=\"1-column\">\n                    <VerticalTimelineElement\n                        icon={ <a>Waiting to accept</a> }\n                        iconStyle={{ background: \"#fcd804\", width:120, left:-42, borderRadius:2, height:25, lineHeight:2 }}\n                    >\n                        <h3>가나다라</h3>\n\n                    </VerticalTimelineElement>\n\n                    {this.state.events.map((event) => {\n\n                        if(addDateComment === event.date){\n                            return (\n                                <VerticalTimelineElement\n                                    date={event.date}\n                                    icon={ <a></a> }\n                                    iconStyle={{ background: event.color}}\n                                >\n                                    <h3\n                                        className=\"vertical-timeline-element-title\"\n                                        dangerouslySetInnerHTML={{ __html: event.event }}\n                                    />\n                                    <button\n                                        onClick={function () {\n                                            alert(event.date);\n                                        }}\n                                    >show date</button>\n                                </VerticalTimelineElement>\n                            )\n                        }else\n                        {\n                            addDateComment = event.date;\n                            return (\n                                <div>\n                                <VerticalTimelineElement\n                                    icon={ <a>{event.date}</a> }\n                                    iconStyle={{ background: \"#a1a1a0\", color:\"#ffffff\", width:120, left:-42, borderRadius:2, height:25, lineHeight:2 }}\n                                >\n                                </VerticalTimelineElement>\n                                <VerticalTimelineElement\n                                    date={event.dateString}\n                                    icon={ <a></a> }\n                                    iconStyle={{ background: event.color}}\n                                >\n                                    <h3\n                                        className=\"vertical-timeline-element-title\"\n                                        dangerouslySetInnerHTML={{ __html: event.event }}\n                                    />\n                                    <button\n                                        onClick={function () {\n                                            alert(event.dateString);\n                                        }}\n                                    >show date</button>\n                                </VerticalTimelineElement>\n                                </div>\n                            )\n\n                        }\n                        } )}\n\n                </VerticalTimeline>\n            </div>\n        </div>\n\n  )\n}\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}